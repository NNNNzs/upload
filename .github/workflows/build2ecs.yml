# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions
name: build2ecs

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: checkout code
        uses: actions/checkout@v2
      - name: Use Node.js
        uses: actions/setup-node@v2
        with:
          node-version: "14"
      - name: Cache node modules
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          # npm cache files are stored in `~/.npm` on Linux/macOS
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
            
      - name: install
        # run: npm install --no-optional --no-shrinkwrap --no-package-lock
        run: npm install
      - name: build
        run: npm run build
        with:
          name: node_modules
          path: |
            node_modules
      - name: Archive production artifacts
        uses: actions/upload-artifact@v3
      - uses: shaowenchen/debugger-action@v2
        name: debugger
        timeout-minutes: 30
        continue-on-error: true
        with:
          ngrok_token: ${{ secrets.NGROK_TOKEN }}

      - name: deploy
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{secrets.KEY}}
          port: ${{ secrets.PORT }}
          source: "dist/"
          target: ${{ secrets.PATH }}
      - name: notice
        run: ${{ secrets.NOTICE_BASH }}
